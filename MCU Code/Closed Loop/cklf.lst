C51 COMPILER V9.02   CKLF                                                                  03/31/2011 14:07:38 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE CKLF
OBJECT MODULE PLACED IN .\cklf.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\hal\nrf24lu1p\cklf.c BROWSE INCDIR(..\..\hal\nrf24lu1p;..\..\hal\nrf2
                    -4l01p;..\..\hal;..\..\compiler\c51) DEFINE(MCU_NRF24LU1P) DEBUG OBJECTEXTEND PRINT(.\cklf.lst) OBJECT(.\cklf.obj)

line level    source

   1          /* Copyright (c) 2009 Nordic Semiconductor. All Rights Reserved.
   2           *
   3           * The information contained herein is confidential property of Nordic 
   4           * Semiconductor ASA.Terms and conditions of usage are described in detail 
   5           * in NORDIC SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT. 
   6           *
   7           * Licensees are granted free, non-transferable use of the information. NO
   8           * WARRENTY of ANY KIND is provided. This heading must NOT be removed from
   9           * the file.
  10           *              
  11           * $LastChangedRevision: 5717 $
  12           */
  13          
  14          /** @file
  15           * @brief Implementation of the cklf module for nRF24LU1+
  16           */
  17          
  18          #include <Nordic\reg24lu1.h>
  19          #include "cklf.h"
  20          
  21          static uint16_t wd_cnt;
  22          
  23          void cklf_regxc_write(uint8_t addr, uint16_t val)
  24          {
  25   1        REGXH = val >> 8;
  26   1        REGXL = val & 0xff;
  27   1        REGXC = addr;
  28   1      }
  29          
  30          uint16_t cklf_regxc_read(uint8_t addr)
  31          {
  32   1        uint16_t val;
  33   1      
  34   1        REGXC = addr;
  35   1        val = (uint16_t)REGXH;
  36   1        val <<= 8;
  37   1        val |= (uint16_t)REGXL;
  38   1        return val;
  39   1      }
  40          
  41          void cklf_rtc_disable(void)
  42          {
  43   1        cklf_regxc_write(WRTCDIS, 0);
  44   1      }
  45          
  46          void cklf_rtc_init(uint8_t cnt_h, uint16_t cnt_l)
  47          {
  48   1        cklf_regxc_write(WRTCDIS, 0);                // Disable RTC timer before updating latch
  49   1        WUF = 0;                                     // Clear any pending interrupts
  50   1        cklf_regxc_write(WGTIMER, (uint16_t)cnt_h);  // Program MS part first
  51   1        cklf_regxc_write(WRTCLAT, cnt_l);            // Write LS part and enable RTC
  52   1      }
  53          
  54          uint16_t cklf_rtc_read_lsw(void)
C51 COMPILER V9.02   CKLF                                                                  03/31/2011 14:07:38 PAGE 2   

  55          {
  56   1        return cklf_regxc_read(RRTC);
  57   1      }
  58          
  59          uint8_t cklf_rtc_read_msb(void)
  60          {
  61   1        return (uint8_t)(cklf_regxc_read(RGTIMER) >> 8);
  62   1      }
  63          
  64          void cklf_rtc_wait(void)
  65          {
  66   1        while(WUF == 0)                         // Wait until IEX6 is set
  67   1          ;
  68   1        WUF = 0;
  69   1      }
  70          
  71          void cklf_wdog_init(uint16_t cnt)
  72          {
  73   1        wd_cnt = cnt;
  74   1        cklf_regxc_write(WWD, wd_cnt);
  75   1      }
  76          
  77          void cklf_wdog_feed(void)
  78          {
  79   1        cklf_regxc_write(WWD, wd_cnt);
  80   1      }
  81          
  82          void cklf_gpio_wakeup(uint16_t wcon1, uint16_t wcon0)
  83          {
  84   1        cklf_regxc_write(WWCON1, wcon1);
  85   1        cklf_regxc_write(WWCON0, wcon0);
  86   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    123    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
